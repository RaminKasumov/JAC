using System;
using JAC.Shared;
using JACService.Core.Contracts;

namespace JAC.Service.Core
{
    public class LoginRequestHandler : ITextRequest
    {
        #region eventHandler
        /// <summary>
        /// EventHandler for ChatUser who is logged in
        /// </summary>
        public static event Action<ChatUser> UserLoggedIn;
        #endregion
        
        #region methods
        /// <summary>
        /// Command of Client is being processed
        /// </summary>
        /// <param name="command">Command of Client</param>
        /// <returns>Returns a response to Client</returns>
        public string GetResponse(string command)
        {
            string[] splitter = command.Split(' ');
            string nickname = command.Substring(splitter[0].Length).Trim();
            ChatDirectory directory = ChatDirectory.GetInstance();
            
            if (directory.FindUser(nickname) != null)
            {
                return "Error: User already exists!";
            }
            else
            {
                ChatUser user = new ChatUser(nickname);
                user.Login();
                directory.AddUser(user);
                OnUserLoggedIn(user);
                return "Login-success: " + user;
            }
        }

        /// <summary>
        /// Raises the UserLoggedIn event by invoking it, notifying subscribers about the user login
        /// </summary>
        /// <param name="user">User</param>
        protected virtual void OnUserLoggedIn(ChatUser user)
        {
            UserLoggedIn?.Invoke(user);
        }
        #endregion
    }
}